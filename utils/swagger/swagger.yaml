openapi: 3.0.0
info:
  version: 1.0.0
  title: Rest API Starter Explorer
  description: A proposed openAPI explorer for Rest Api Starter Template
schemes:
  - http
servers:
  - url: http://localhost:3000/api/v1
    description: Development server
tags:
  - name: Auth
    description: Authentication and authorization operations
  - name: Admin Auth
    description: Authentication for Admin
  - name: User
    description: Routes related to End User
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Creates a new User
      description: Creates a new user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  example: Password@123
      responses:
        "201":
          description: User Created successfully.
        "400":
          description: Unable to create user.
        "500":
          description: Internal Server Error
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login a user
      description: Login a user using email and password.
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  example: Password@123
      responses:
        "200":
          description: Logged In Successfully.
        "400":
          description: Unable to Login.
        "500":
          description: Internal Server Error
  /auth/token/verify:
    get:
      tags:
        - Auth
      summary: Verifies a given token for a new user
      description: Verifies a token for a new user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: t
          schema:
            type: string
          description: Access token
      responses:
        "200":
          description: Token Verified successfully.
        "400":
          description: Failed to verify the token.
        "500":
          description: Internal Server Error
  /auth/token/resend:
    post:
      tags:
        - Auth
      summary: Resend Token
      description: Resend Token for a new user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  example: Password@123
      responses:
        "200":
          description: Token Resent Successfully.
        "400":
          description: Unable to Resend token.
        "401":
          description: Incorrect Password.
        "500":
          description: Internal Server Error
  /auth/password:
    patch:
      tags:
        - Auth
      summary: Change Password
      description: Change password using old password
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  required: true
                  example: Password@123
                newPassword:
                  type: string
                  example: Password@124
      responses:
        "200":
          description: Password Changed Successfully.
        "400":
          description: Bad Request.
        "403":
          description: Password Change Failed Try Again later
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
  /auth/password/reset/code/resend:
    post:
      tags:
        - Auth
      summary: Regenerate code to reset password
      description: Regenerate OTP to reset password
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
      responses:
        "200":
          description: OTP Sent successfully to your email.
        "400":
          description: Failed, User doesn't exist.
        "500":
          description: Internal Server Error
  /auth/password/reset/code:
    post:
      tags:
        - Auth
      summary: Generate code to reset password
      description: Generate OTP to reset password
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
      responses:
        "200":
          description: OTP Sent successfully to your email.
        "400":
          description: Failed, User doesn't exist.
        "500":
          description: Internal Server Error
  /auth/password/reset:
    post:
      tags:
        - Auth
      summary: Reset password using OTP
      description: Reset password of a user using OTP.
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  required: true
                  example: password@123
                otp:
                  type: integer
                  required: true
      responses:
        "200":
          description: Password Reset successfully.
        "400":
          description: Failed, Check the error message for details.
        "500":
          description: Internal Server Error
  /auth:
    delete:
      tags:
        - Auth
      summary: Delete a user permanently
      description: Deletes a user permanently.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Deleted Successfully.
        "400":
          description: Bad Request.
        "403":
          description: Failed to delete user
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
  /admin/auth/register:
    post:
      tags:
        - Admin Auth
      summary: Creates a new Admin account
      description: Creates a new Admin account
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  example: Password@123
      responses:
        "201":
          description: Admin user Created successfully.
        "400":
          description: Unable to create Admin user.
        "500":
          description: Internal Server Error
  /admin/auth/login:
    post:
      tags:
        - Admin Auth
      summary: Login as an Admin
      description: Login as an admin using email and password.
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                  example: user@email.com
                password:
                  type: string
                  example: Password@123
      responses:
        "200":
          description: Logged In Successfully.
        "400":
          description: Unable to Login.
        "500":
          description: Internal Server Error
  /admin/auth/users:
    get:
      tags:
        - Admin Auth
      summary: Get a list of all the users
      description: Get a list of all the users registered in this app.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Users Fetched successfully.
        "403":
          description: Failed, Forbidden to fetch user
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
  /admin/auth/admins:
    patch:
      tags:
        - Admin Auth
      summary: Get a list of all the admins.
      description: Get a list of all the admins registered in the app.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Admins Fetched successfully.
        "403":
          description: Failed, Forbidden to fetch admins.
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
  /admin/auth/user/enable:
    get:
      tags:
        - Admin Auth
      summary: Enable an admin account.
      description: Enable an admin account using access token.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Account enabled successfully.
        "403":
          description: Failed, Forbidden to enable user account.
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
  /admin/auth/user/disable:
    get:
      tags:
        - Admin Auth
      summary: Disable an admin account.
      description: Disable an admin account using access token.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Account disabled successfully.
        "403":
          description: Failed, Forbidden to disable user account.
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []

  /user:
    get:
      tags:
        - User
      summary: Get all the details of a user
      description: Get a list of all the details of a user by providing access token.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: User Data Fetched successfully.
        "403":
          description: Failed, Forbidden to fetch user data.
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
    patch:
      tags:
        - User
      summary: Edit User Details
      description: Edit data related to the user.
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  required: true
                  example: Shubham
                lastName:
                  type: string
                  example: Raj
                gender:
                  type: string
                  example: Male
                age:
                  type: integer
                  example: 20
      responses:
        "200":
          description: User Data Fetched successfully.
        "403":
          description: Failed, Forbidden to fetch user data.
        "500":
          description: Internal Server Error
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        age:
          type: integer
        knownLanguages:
          type: string
        profession:
          type: string
        location:
          type: string
        latitude:
          type: integer
        longitude:
          type: integer
        photoUrl:
          type: string
        symptoms:
          type: string
      required:
        - userId
        - email
    Auth:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        admin:
          type: boolean
        adminVerified:
          type: boolean
        disabled:
          type: boolean
        emailVerified:
          type: boolean
        provider:
          type: boolean
        oauthToken:
          type: string
      required:
        - email
    Token:
      type: object
      properties:
        _userId:
          type: string
        token:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - _userId
        - token
        - createdAt
